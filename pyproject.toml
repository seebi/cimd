[tool.poetry]
name = "cimd"
version = "0.0.0"
license = "Apache-2.0"
description = "Collect and share metadata of CI/CD processes."
authors = ["Sebastian Tramp <mail@sebastian.tramp.name>"]
classifiers = [
    "Development Status :: 4 - Beta",
]
readme = "README-public.md"

homepage = "https://github.com/seebi/cimd"

[tool.poetry.scripts]
cimd = 'cimd.cli:cli'

[tool.poetry.dependencies]
python = "^3.11"
click = "^8.1.8"
pydantic = "^2.5.3"
pygments = "^2.17.2"
python-gitlab = "^5.3.0"
tabulate = "^0.9.0"

[tool.poetry.group.dev.dependencies]
genbadge = {extras = ["coverage"], version = "^1.1.1"}
mypy = "^1.11.1"
pip = "^24"
pytest = "^8.3.2"
pytest-cov = "^5.0.0"
pytest-dotenv = "^0.5.2"
pytest-html = "^4.1.1"
pytest-memray = { version = "^1.7.0",  markers = "platform_system != 'Windows'" }
ruff = "^0.6.1"
safety = "^1.10.3"
types-pyyaml = "^6.0.12.12"
types-tabulate = "^0.9.0.3"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
dirty = true
bump = true

[tool.mypy]
warn_return_any = true
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = ""

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    ]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.format]
line-ending = "lf" # Use `\n` line endings for all files

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN101",  # Missing type annotation for self in method
    "ANN204",  # Missing return type annotation for special method `__init__`
    "COM812",  # missing-trailing-comma
    "D107",    # Missing docstring in __init__
    "D203",    # [*] 1 blank line required before class docstring
    "D211",    # No blank lines allowed before class docstring
    "D213",    # Multi-line docstring summary should start at the second line
    "D400",    # First line should end with a period
    "D415",    # First line should end with a period, question mark, or exclamation point
    "EM",      # Exception texts - https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
    "FBT",     # The Boolean Trap - https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
    "FIX002",  # Allow to add TODO notes in the code
    "G004",    # Logging statement uses f-string
    "ISC001",  # single-line-implicit-string-concatenation
    "PD",      # opinionated linting for pandas code
    "S101",    # use of assert detected
    "TRY003",  # Avoid specifying long messages outside the exception class
]

